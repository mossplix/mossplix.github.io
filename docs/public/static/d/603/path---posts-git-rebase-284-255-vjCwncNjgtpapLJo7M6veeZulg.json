{"data":{"site":{"siteMetadata":{"author":{"name":"Moses Mugisha","contacts":{"twitter":"mossplix"}},"disqusShortname":"","subtitle":"Software Engineer, Machine Learning, GIS, Android  with nearly 10 years of tech industry experience","title":"Blog by Moses Mugisha","url":"https://mmugisha.com"}},"markdownRemark":{"id":"b49a8e2e-cd05-56a1-80c4-48b113eb4424","html":"<p>In Git, there are two main ways to integrate changes from one branch into another: the merge and the rebase. </p>\n<hr>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Branch early, branch often</code></pre></div>\n<hr>\n<p>Say Dan and  Moses are working on the domains branch and  John is working on the master branch. Now, what we need to do is to integrate the changes that are on master into our branch.  If you have pushed your changes back into the remote branch, you should merge.</p>\n<p>But, if you didn’t push yet, probably what you want to use is not a merge, probably it’s a rebase. Rebase is a way of changing the history and basically what the rebase does is it takes the changes that you have on your branch and reapplies on the top of the branch that you specified. </p>\n<p>Rebasing enables fast-forward merges by moving a branch to the tip of another branch. It effectively eliminates the need for merge commits, resulting in a completely linear history.</p>\n<p>Fast forward merges are merges that can be applied when the the current branch is the ancestor of the branch you want to merge. Fast forward merges simply move the ancestor’s hash to be the new master hash.</p>\n<h2 id=\"in-summary\"><a href=\"#in-summary\" aria-label=\"in summary permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>In summary</h2>\n<p>git rebase allows you to rewrite your history. It alters the repository so that the commits you can see before and after its usage are different. It can change, merge, split, add, remove, modify commits.</p>\n<p>In case the changes are pushed upstream already and  you change history, you will break merges for EVERYONE that has already ‘pulled’ your branch. That’s why you only use rebase when you haven’t pushed your changes. </p>\n<hr>\n<p>NOTE: Don’t rebase if you have already pushed your changes upstream.</p>\n<hr>\n<h2 id=\"simple-rules\"><a href=\"#simple-rules\" aria-label=\"simple rules permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Simple Rules</h2>\n<p>1.No commit should EVER be rebased if\n-fit is already public.\n- If you have already pushed it\n- If you have pulled or fetched it, or\n- You have merged it on a different branch</p>\n<p>There are 2 types of rebases:</p>\n<ul>\n<li>Batch</li>\n<li>Interactive</li>\n</ul>\n<h1 id=\"batch-rebase\"><a href=\"#batch-rebase\" aria-label=\"batch rebase permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>BATCH Rebase</h1>\n<p>git rebase master\nTakes a branch, and modify it to make it look like the branch never existed, and the dev. Was done directly off another branch.</p>\n<p>Example:</p>\n<p>A-B-C-D              master\n-E-F-G      topic</p>\n<p>Becomes:</p>\n<p>A-B-C-D-E’-F’-G’   master\nFrom ‘topic’ branch: ‘git rebase master’</p>\n<p>git rebase does an actual merge and Merges may have conflict.  You have three choices</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">1.  Solve the conflicts:\n      git add the resolved-files\n      git rebase –continue\n2.  Skip this commit\n      git rebase –skip\n3. Abort the rebase\n     git rebase --abort</code></pre></div>\n<h2 id=\"change-tree-structure\"><a href=\"#change-tree-structure\" aria-label=\"change tree structure permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Change Tree Structure</h2>\n<p>You can also change the tree structure of your repository.</p>\n<p>E.g: you have master, branch A forked from master, branch B forked from A</p>\n<p>After: git rebase —onto master A B</p>\n<p>Now, branch B is forked from the HEAD of master</p>\n<h2 id=\"delete-commits\"><a href=\"#delete-commits\" aria-label=\"delete commits permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Delete Commits</h2>\n<p>You  can delete commits:\nA-B-C-D-E-F      master\ngit rebase —onto master~5 master~1 master\nA-E-F master</p>\n<h1 id=\"1-block-queries\"><a href=\"#1-block-queries\" aria-label=\"1 block queries permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Block Queries</h1>\n<h2 id=\"11-difference\"><a href=\"#11-difference\" aria-label=\"11 difference permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.1 Difference</h2>\n<p>The difference block statement is written as a pair of parentheses. Inside the difference statement, exactly two statements must be placed, and between them a minus sign.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(statement_1; - statement_2;)[-&gt;.result_set];</code></pre></div>\n<p>It takes no input set. It produces a result set. Its result set contains all elements that are result of the first sub-statement and not contained in the result of the second sub-statement.</p>\n<p>Example:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(node[name=&quot;Foo&quot;]; - node(50.0,7.0,51.0,8.0););</code></pre></div>\n<p>This collects all nodes that have a name tag “Foo” but are not inside the given bounding box.</p>\n<p>The result set of the difference statement can be redirected with the usual postfix notation:</p>\n<p>Example:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(node[name=&quot;Foo&quot;]; - node(50.0,7.0,51.0,8.0);)-&gt;.a;</code></pre></div>\n<p>Same as the preceding example, but the result is written into the variable a.</p>\n<p>  (\nnode<a href=\"47.06,%2015.435,%20%2047.07,%20%2015.44\">amenity</a>;\n-node<a href=\"47.064,%2015.435,%2047.066,%2015.44\">amenity</a>;\n);\nout;</p>\n<h2 id=\"12-for-each-loop-foreach\"><a href=\"#12-for-each-loop-foreach\" aria-label=\"12 for each loop foreach permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.2 For-each loop (foreach)</h2>\n<p>The foreach statement loops over the content of the input set, once for every element in the input set.</p>\n<p>Example:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">foreach.a(...);</code></pre></div>\n<p>This loops over the content of set a instead of the default set ”_“.</p>\n<p>The name of the variable to put the loop element into can also be chosen by adding a postfix immediately before the opening parenthese.</p>\n<p>Example:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">foreach-&gt;.b(...);</code></pre></div>\n<p>This puts the element to loop over into the variable b. Without it, the foreach statement does not puts the elements into any set. Example for both input and loop set changed:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">foreach.a-&gt;.b(...);\n\n\n// get all bank nodes in coordinates\n(\n  node[amenity=bank]\n  (47.0678,15.4401658,47.069,15.4501658);\n  &gt;;\n);\n// foreach bank node, print out adjacent nodes\nforeach-&gt;.bank_set(\n  node(around.bank_set:15)-&gt;.adjacent_set;\n  (.adjacent_set);\n  out meta;\n);</code></pre></div>\n<h2 id=\"13-union\"><a href=\"#13-union\" aria-label=\"13 union permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.3 Union</h2>\n<p>The union block statement is written as a pair of parentheses. Inside the union, any sequence of statements can be placed, including nested union and foreach statements.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(statement_1; statement_2; …)[-&gt;.result_set];</code></pre></div>\n<p>It takes no input set. It produces a result set. Its result set is the union of the result sets of all sub-statements, regardless of whether a sub-statement has a redirected result set or not.</p>\n<p>Example:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(node[name=&quot;Foo&quot;];way[name=&quot;Foo&quot;];);</code></pre></div>\n<p>This collects in the first statement all nodes that have a name tag “Foo” and in the second statement all ways that have a name tag “Foo”. After the union statement, the result set is the union of the result sets of both statements.</p>\n<p>The result set of the union statement can be redirected with the usual postfix notation:</p>\n<p>Example:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(node[name=&quot;Foo&quot;];way[name=&quot;Foo&quot;];)-&gt;.a;</code></pre></div>\n<p>Same as the preceding example, but the result is written into the variable a.</p>\n<p>Note: foreach and print statements cannot be subelement of element union.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(\nnode\n  [amenity=drinking_water]\n  (47.06,15.42,47.09,15.48);\nnode\n  [tourism=hotel]\n  (47.06,15.42,47.09,15.48);\n);\nout;</code></pre></div>\n<h1 id=\"2-standalone-queries\"><a href=\"#2-standalone-queries\" aria-label=\"2 standalone queries permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2 Standalone Queries</h1>\n<h2 id=\"21-item\"><a href=\"#21-item\" aria-label=\"21 item permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.1 Item</h2>\n<p>The item standalone query consists only of an input set prefix.</p>\n<p>It takes the input set specified by its prefix. This is in particular useful for union statements: it reproduces its input set as (part of the) result of the union statement.</p>\n<p>The most common usage is the usage with the default input set:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  ._;</code></pre></div>\n<p>In the context of a union statement, the following will return all items in the default inputset along with the recurse down result.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  (._; &gt;;);</code></pre></div>\n<p>But of course other sets are possible too:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  .a;</code></pre></div>\n<p>In the context of a union statement:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  (.a; .a &gt;;);</code></pre></div>\n<p>Note: Subsequent statements in a union statement are not impacted by the item statement. In particular <code class=\"language-text\">.a;</code> does not add the contents of the input set to the default item set ._</p>\n<p>The item statement can also be used as filter.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">node[amenity=bank]\n  (47.06,15.42,47.09,15.48);\n)-&gt;.bank_set;\n\n//here we print the bank_set by passing the .bank_set query\n.bank_set out;</code></pre></div>\n<h1 id=\"3-actions\"><a href=\"#3-actions\" aria-label=\"3 actions permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3 Actions</h1>\n<h3 id=\"print-out\"><a href=\"#print-out\" aria-label=\"print out permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Print (out)</h3>\n<p>The out action can be configured with an arbitrary number of parameters that are appended, separated by whitespace, between the word out and the semicolon.</p>\n<p>The out action takes an input set. It doesn’t return a result set. The input set can be changed by prepending the variable name.</p>\n<p>Allowed values, in any order, are:</p>\n<ul>\n<li>\n<p>one of the following the degree of verbosity; default is body:</p>\n<ul>\n<li><em>ids</em>: Print only the ids of the elements.</li>\n<li><em>skel</em>: Print also the information necessary for geometry. These are also coordinates for nodes and way and relation member ids for ways and relations.</li>\n<li><em>body</em>: Print all information necessary to use the data. These are also tags for all elements and the roles for relation members.</li>\n<li><em>tags</em>: Print only ids and tags for each element and not coordinates or members.</li>\n<li><a href=\"#docs-tab-meta\"><em>meta</em></a>: Print everything known about the elements. This includes additionally to body for all elements the version, changeset id, timestamp and the user data of the user that last touched the object.</li>\n</ul>\n</li>\n<li>\n<p>one of the following modificators for derived information:</p>\n<ul>\n<li><a href=\"#docs-tab-bounding_box\"><em>bb</em></a>: Adds the bounding box of each element to the element. For nodes this is equivalent to “geom”. For ways it is the enclosing bounding box of all nodes. For relations it is the enclosing bounding box of all node and way members, relations as members have no effect.</li>\n<li><a href=\"#docs-tab-center\"><em>center</em></a>: This adds the center of the above mentioned bounding box to ways and relations. Note: The center point is not guaranteed to lie inside the polygon (example).</li>\n<li><em>geom</em>: Add the full geometry to each object. This adds coordinates to each node, to each node member of a way or relation, and it adds a sequence of “nd” members with coordinates to all relations.</li>\n</ul>\n</li>\n</ul>\n<p>The attribute “geom” can be followed by a bounding box in the format “(south,west,north,east)“. In this case only coordinates that are inside the bounding box are produced. For way segments also the first coordinate outside the bounding box is produced to allow for properly formed segments.</p>\n<ul>\n<li>\n<p>One of the following for the sort order can be added. Default is asc.</p>\n<ul>\n<li>asc: Sort by object id.</li>\n<li>qt: Sort by quadtile index; this is roughly geographical and significantly faster than order by ids.</li>\n</ul>\n</li>\n<li>a non-negative integer for the maximum number of elements to print. Default is no limit.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(\n  // Rio de Janeiro&#39;s Christ the Redeemer peak\n  node[name=Corcovado][natural=peak];\n  &gt;;\n);\nout;\n===meta===\n(\n  // Rio de Janeiro&#39;s Christ the Redeemer peak\n  node[name=Corcovado][natural=peak];\n  &gt;;\n);\nout meta;\n===bounding box===\n(\n  // Rio de Janeiro&#39;s Christ the Redeemer peak\n  way(141708228);\n  &gt;;\n);\nout bb;\n===limit===\n(\n  // Rio de Janeiro&#39;s Christ the Redeemer peak\n  way(141708228);\n  &gt;;\n);\n// only print 20 nodes from the way \nout 20;\n===center===\n(\n  // Rio de Janeiro&#39;s Christ the Redeemer peak\n  way(141708228);\n  &gt;;\n);\n// print center (not centroid) of the polygon\nout center;\n===combination===\n(\n  // Rio de Janeiro&#39;s Christ the Redeemer peak\n  way(141708228);\n  &gt;;\n);\n// print multiple times using different modifiers\nout geom;\nout center;\nout bb;</code></pre></div>\n<h1 id=\"filters\"><a href=\"#filters\" aria-label=\"filters permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Filters</h1>\n<h2 id=\"bounding-box\"><a href=\"#bounding-box\" aria-label=\"bounding box permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Bounding Box</h2>\n<p>The bbox-query filter selects all elements within a certain bounding box.</p>\n<p>It has no input set. As for all filters, the result set is specified by the whole statement, not the individual filter.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(south,west,north,east)\n\n\n{{&lt; docs_repl &gt;}}</code></pre></div>\n<p>node\n(47.065,15.425,47.07,15.43); // a bbox-filter\nout;\n{{&#x3C; /docs_repl >}}</p>\n<h2 id=\"by-element-id\"><a href=\"#by-element-id\" aria-label=\"by element id permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>By Element Id</h2>\n<p>The id-query filter selects the element of given type with given id.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">// get node with id 1170494282\n// put it (implicitly) in the default set\nnode(1170494282);\n// print the default set\nout;</code></pre></div>\n<h2 id=\"by-area-area\"><a href=\"#by-area-area\" aria-label=\"by area area permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>By area (area)</h2>\n<p>The area filter selects all elements of the chosen type that are inside the given area.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">// search the area of the Dolmites\narea\n  [place=region]\n  [&quot;region:type&quot;=&quot;mountain_area&quot;]\n  [&quot;name:en&quot;=&quot;Dolomites&quot;];\nout body;\n\n// get all peaks in the area\nnode\n  [natural=peak]\n  (area);\nout body qt;</code></pre></div>\n<h2 id=\"by-tag\"><a href=\"#by-tag\" aria-label=\"by tag permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>By Tag</h2>\n<p>The has-kv filter selects all elements that have or have not a tag with a certain value. It supports the basic OSM types node, way, and relation as well as the extended type area.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">node[&quot;name&quot;~&quot;^Foo$&quot;];    /* finds exactly &quot;Foo&quot; */\nnode[&quot;name&quot;~&quot;^Foo&quot;];     /* finds anything that starts with &quot;Foo&quot; */\nnode[&quot;name&quot;~&quot;Foo$&quot;];     /* finds anything that ends with &quot;Foo&quot; */\nnode[&quot;name&quot;~&quot;Foo&quot;];      /* finds anything that contains the substring &quot;Foo&quot; */\nnode[&quot;name&quot;~&quot;.&quot;];        /* finds anything, equal to the previous variant */</code></pre></div>\n<h2 id=\"by-date-of-change-changed\"><a href=\"#by-date-of-change-changed\" aria-label=\"by date of change changed permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>By date of change (changed)</h2>\n<p>The changed filter selects all elements that have been changed between the two given dates.</p>\n<p>Example: All changes since the given date and now</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">node._(changed:&quot;2012-09-14T07:00:00Z&quot;);</code></pre></div>\n<p>Another Example:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(node(poly:&quot;50.73 7.13 50.73 7.17 50.75 7.15&quot;);&gt;;);\n// This finds all nodes that have changed\n// between the two given dates \nnode._(changed:&quot;2012-09-14T07:00:00Z&quot;,&quot;2012-09-14T07:01:00Z&quot;);\nout;</code></pre></div>\n<h2 id=\"relative-to-other-elements-around\"><a href=\"#relative-to-other-elements-around\" aria-label=\"relative to other elements around permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Relative to other elements (around)</h2>\n<p>The around filter selects all elements within a certain radius around the elements in the input set</p>\n<p>Example: Find all cinemas in Bonn which are at most 100m away from bus stops</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">area[name=&quot;Bonn&quot;];\nnode(area)[highway=bus_stop];\nnode(around:100)[amenity=cinema];\nout;</code></pre></div>\n<h2 id=\"by-input-set\"><a href=\"#by-input-set\" aria-label=\"by input set permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>By Input Set</h2>\n<p>The “item” filter selects all elements from its input set.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">// get area Alpe and Cividale\n(area[name=&quot;Cividale del Friuli&quot;])-&gt;.Cividale;\n(area[name=&quot;Julijske Alpe&quot;])-&gt;.Alpe;\n\n(node[power=pole](area.Cividale))-&gt;.Cividale_nodes;\n(node[power=pole](area.Alpe))-&gt;.Alpe_nodes;\n\n// print out nodes that are present in both areas (intersection)\nnode.Alpe_nodes.Cividale_nodes;\nout body qt;\n\n(relation[name=&quot;Cividale del Friuli&quot;];&gt;;);\nout body;\nout skel qt;\n\n(relation[name=&quot;Julijske Alpe&quot;];&gt;;);\nout body;\nout skel qt;</code></pre></div>\n<h2 id=\"newer\"><a href=\"#newer\" aria-label=\"newer permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>newer</h2>\n<p>The newer filter selects all elements that have been changed since the given date</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(node(poly:&quot;50.73 7.13 50.73 7.17 50.75 7.15&quot;);&gt;;);\n// This finds all nodes that have changed\n// since 14 Sep 2012, 7 h UTC, in the given input set.\n(node._(newer:&quot;2012-09-14T07:00:00Z&quot;);&gt;;);\nout;</code></pre></div>\n<h2 id=\"area-pivot-pivot\"><a href=\"#area-pivot-pivot\" aria-label=\"area pivot pivot permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Area pivot (pivot)</h2>\n<p>The <em>pivot</em> filter selects the element of the chosen type that defines the outline of the given area.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">// determine area for Greater London and store it to .London_area\narea[name=&quot;London&quot;][admin_level=6][boundary=administrative]-&gt;.London_area;\n// convert back to relations using the pivot filter\nrel(pivot.London_area);\n// output the geom\nout geom;</code></pre></div>\n<h2 id=\"by-polygon-poly\"><a href=\"#by-polygon-poly\" aria-label=\"by polygon poly permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>By polygon (poly)</h2>\n<p>The <em>polygon</em> filter selects all elements of the chosen type inside the given bounding box.</p>\n<p>  (node(poly:“50.73 7.13 50.73 7.17 50.75 7.15”);>;);\nout;</p>\n<h2 id=\"recurse-n-w-r-bn-bw-br\"><a href=\"#recurse-n-w-r-bn-bw-br\" aria-label=\"recurse n w r bn bw br permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recurse (n, w, r, bn, bw, br)</h2>\n<p>The recurse filter selects all elements that are members of an element from the input set or have an element of the input set as member, depending on the given parameter.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  node(w);        // select child nodes from all ways of the input set\n  node(r);        // select node members of relations of the input set\n  way(bn);        // select parent ways for all nodes from the input set\n  way(r);         // select way members of relations from the input set\n  rel(bn);        // select relations that have node members from the input set\n  rel(bw);        // select relations that have way members from the input set\n  rel(r);         // select all members of type relation from all relations of the input set\n  rel(br);        // select all parent relations of all relations from the input set</code></pre></div>\n<p>You can also restrict the recurse to a specific role. Just add a colon and then the name of the role before the closing parenthesis.</p>\n<p>Examples with default input set:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">node(r:&quot;role&quot;);        // select node members of relations of the input set\nway(r:&quot;role&quot;);         // select way members of relations from the input set\nrel(bn:&quot;role&quot;);        // select relations that have node members from the input set\nrel(bw:&quot;role&quot;);        // select relations that have way members from the input set\nrel(r:&quot;role&quot;);         // select all members of type relation from all relations of the input set\nrel(br:&quot;role&quot;);        // select all parent relations of all relations from the input set\nExample with modified input set:\n\nnode(r.foo:&quot;role&quot;);</code></pre></div>\n<p>And you can also search explicitly for empty roles:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">node(r:&quot;&quot;);\nnode(r.foo:&quot;&quot;);</code></pre></div>","fields":{"slug":"/posts/git-rebase/","tagSlugs":["/tag/git/","/tag/rebase/","/tag/tutorial/"]},"frontmatter":{"date":"2019-05-14T11:46:37.121Z","description":"Git rebase jutsu ","tags":["git","rebase","tutorial"],"title":"Git Rebase"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/git-rebase/"}}